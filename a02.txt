//adding a new key value pair in object
import React, { useState } from 'react';

function App() {
  const [obj, setObj] = useState({ key1: 'value1' });

  const addKeyValuePair = () => {
    setObj({
      ...obj,
      key2: 'value2', // Add a new key-value pair
    });
  };

  return (
    <div>
      <h1>Object State</h1>
      <pre>{JSON.stringify(obj, null, 2)}</pre> {/* Display the object */}
      <button onClick={addKeyValuePair}>Add Key-Value Pair</button>
    </div>
  );
}

export default App;



//checking that do usestate get update instantly?
in copy ex we seen hat it dont so we use useeffect


//Use useEffect to log the updated state after the component re-renders.
import React, { useState, useEffect } from 'react';

function App() {
  const [obj, setObj] = useState({ key1: 'value1' });

  const addKeyValuePair = () => {
    setObj({
      ...obj,
      key2: 'value2',
    });
    console.log("Old State:", obj); // Logs the old state
  };

  useEffect(() => {
    console.log("Updated State:", obj); // Logs the updated state after it changes
  }, [obj]);

  return (
    <div>
      <h1>Object State</h1>
      <pre>{JSON.stringify(obj, null, 2)}</pre> {/* Display the object */}
      <button onClick={addKeyValuePair}>Add Key-Value Pair</button>
    </div>
  );
}

export default App;
